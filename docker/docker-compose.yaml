# this file is not designed to be run directly
# instead, use the docker-compose.<os>.<swift> files
# eg docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.1604.51.yaml run test
version: "3"

services:

  runtime-setup:
    image: swift-cluster-membership:default
    build:
      context: .
      dockerfile: Dockerfile

  common: &common
    image: swift-cluster-membership:default
    depends_on: [runtime-setup]
    volumes:
      - ~/.ssh:/root/.ssh
      - ..:/code:z
    working_dir: /code
    cap_drop:
      - CAP_NET_RAW
      - CAP_NET_BIND_SERVICE
    environment:
      - MAX_ALLOCS_ALLOWED_example=1000

  sanity:
    <<: *common
    command: /bin/bash -cl "./scripts/soundness.sh"

  unit-tests:
    <<: *common
    command: /bin/bash -cl "swift test --enable-test-discovery"

  unit-tests-until-failure:
    <<: *common
    command: /bin/bash -cl "while swift test --enable-test-discovery; do :; done"

  integration-tests:
    <<: *common
    command: /bin/bash -cl "./scripts/integration_tests.sh"

  test:
    <<: *common
    command: /bin/bash -cl "swift test $${EXPLICIT_TARGET_DEPENDENCY_IMPORT_CHECK-} --enable-test-discovery -Xswiftc -DTESTS_LEAKS && ./scripts/integration_tests.sh"
#    command: /bin/bash -cl "WARNINGS_AS_ERRORS=yes swift test --enable-test-discovery -Xswiftc -DTESTS_LEAKS && ./scripts/integration_tests.sh"

  # util

  shell:
    <<: *common
    entrypoint: /bin/bash -l
